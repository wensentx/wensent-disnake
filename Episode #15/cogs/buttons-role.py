# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ disnake.
import disnake
from disnake.ext import commands


# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å "ButtonView", –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç disnake.ui.View.
class ButtonView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "button1" —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–µ–π-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º.
    @disnake.ui.button(label="üéÆ", style=disnake.ButtonStyle.grey, custom_id="button1")
    async def button1(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ –µ–µ ID (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π ID –≤–º–µ—Å—Ç–æ ...).
        role = interaction.guild.get_role(...)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —ç—Ç–∞ —Ä–æ–ª—å, –∏ –¥–æ–±–∞–≤–ª—è–µ–º/—É–±–∏—Ä–∞–µ–º –µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
        if role in interaction.author.roles:
            await interaction.author.remove_roles(role)
        else:
            await interaction.author.add_roles(role)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞, —á—Ç–æ –±–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–ª –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏.
        await interaction.response.defer()


# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å "ButtonsRole", –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º (Cog) –¥–ª—è –±–æ—Ç–∞.
class ButtonsRole(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.persistent_views_added = False

    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É "buttons", –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π.
    @commands.command()
    async def buttons(self, ctx):
        view = ButtonView()

        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ –µ–µ ID (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π ID –≤–º–µ—Å—Ç–æ ...).
        role = ctx.guild.get_role(...)

        embed = disnake.Embed(color=0x2F3136)
        embed.set_author(name="–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:")
        embed.description = f"{role.mention}\n\n–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–æ—Ö–æ–¥—è—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. " \
                            "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. " \
                            "–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ —É–±–∏—Ä–∞–µ—Ç —Ä–æ–ª—å."
        embed.set_image(url="https://i.imgur.com/QzB7q9J.png")
        await ctx.send(embed=embed, view=view)

    # –°–æ–∑–¥–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–±—ã—Ç–∏—è "on_ready", –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—É—é –∫–Ω–æ–ø–∫—É.
    @commands.Cog.listener()
    async def on_ready(self):
        if self.persistent_views_added:
            return

        # Message ID —Å–æ–æ–±—â–µ–Ω–∏—è, –≥–¥–µ –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞, –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã.
        # –ù—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—Å—Ç–∞–≤–∏—Ç—å –≤–º–µ—Å—Ç–æ "...", –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        # –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.
        self.bot.add_view(ButtonView(), message_id=...)


# –§—É–Ω–∫—Ü–∏—è setup, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å ButtonsRole –∫–∞–∫ Cog (–∫–æ–º–∞–Ω–¥—É-—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ) –≤ –±–æ—Ç–∞.
def setup(bot):
    bot.add_cog(ButtonsRole(bot))
